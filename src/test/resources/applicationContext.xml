<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd 
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc.xsd 
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context.xsd 
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop.xsd 
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx.xsd ">

	<aop:aspectj-autoproxy />

	<context:property-placeholder location="classpath:jdbc.properties" />

	<context:component-scan base-package="com.mangocity.spring"></context:component-scan>

	<bean id="test" class="com.mangocity.spring.aspect.TestBean"></bean>

	<bean id="helloServiceImpl" class="com.mangocity.spring.proxy.HelloServiceImpl"></bean>
	
	<bean id="helloAfterAdvice" class="com.mangocity.spring.proxy.HelloServiceAfterAdvice"></bean>
	
	<bean id="helloAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref bean="helloAfterAdvice" />
		</property>
		<!--指定要代理的方法 -->
		<property name="patterns">
			<value>.*sayHello.* </value>
		</property>
	</bean>
	
	<!-- 代理工厂 -->
	<bean id="helloProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<!--这里代理的是接口 -->
		<property name="proxyInterfaces">
			<value>com.mangocity.spring.proxy.IHelloService</value>
		</property>
		<!--是ProxyFactoryBean要代理的目标类 -->
		<property name="target">
			<ref bean="helloServiceImpl" />
		</property>
		<!--程序中的Advice -->
		<property name="interceptorNames">
			<list>
				<value>helloAdvisor</value>
			</list>
		</property>
	</bean>

	<!-- 切面 必须配置<aop:aspectj-autoproxy /> -->
	<bean class="com.mangocity.spring.aspect.AspectTest"></bean>

	<!-- 3.数据库链接 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="maxPoolSize" value="${c3p0.pool.size.max}" />
		<property name="minPoolSize" value="${c3p0.pool.size.min}" />
		<property name="initialPoolSize" value="${c3p0.pool.size.ini}" />
		<property name="acquireIncrement" value="${c3p0.pool.size.increment}" />
	</bean>

	<!-- 5.整合jdbcTemplate，直接执行sql，方便批量sql操作和统计分析SQL -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 命名参数jdbc模板 -->
	<bean id="namedParameterJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<!-- 7.事务 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="view*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!-- 切点 service.xx.impl.xxService()中的方法 -->
		<aop:pointcut expression="execution(* com.mangocity.spring.service..*.*(..))"
			id="transactionPointCut" />
		<!-- 增强，进行事务控制 Advisor -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointCut" />
	</aop:config>

	<import resource="applicationContext-service.xml" />

	<import resource="applicationContext-dao.xml" />
</beans>